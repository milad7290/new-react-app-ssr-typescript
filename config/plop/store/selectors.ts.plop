import { createSelector } from 'reselect';
import { RootState } from '../root.types';

// Cache TTL in Milliseconds
const CACHE_TTL = 60 * 1000;

export const get{{pascalCase storeName}} = (state: RootState) => state.{{camelCase storeName}} || {};

export const get{{pascalCase storeName}}Items = createSelector(
    [get{{pascalCase storeName}}],
    ({{camelCase storeName}}) => {
        return {{camelCase storeName}}.items;
    }
);

export const isExpired = (state: RootState): boolean => {
    const { updatedAt, didInvalidate } = get{{pascalCase storeName}}(state);
    if (didInvalidate === true || !updatedAt || Date.now() - updatedAt > CACHE_TTL) {
        return true;
    }
    return false;
};

export const isLoading = createSelector([get{{pascalCase storeName}}], ({{camelCase storeName}}) => {
    return {{camelCase storeName}}.isLoading;
});

export const didInvalidate = createSelector([get{{pascalCase storeName}}], ({{camelCase storeName}}) => {
    return {{camelCase storeName}}.didInvalidate;
});
