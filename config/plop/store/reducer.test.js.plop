import reducer from './reducer';
import { {{camelCase storeName}}InitialState, {{pascalCase storeName}}ActionTypes, {{pascalCase storeName}}State } from './types';

describe('{{pascalCase storeName}} reducer', () => {
    let state: {{pascalCase storeName}}State;

    beforeEach(() => {
        state = { ...{{camelCase storeName}}InitialState };
    });

    it('should return the initial state', () => {
        expect({{camelCase storeName}}InitialState).toEqual(state);
    });

    it('should change into loading state', () => {
        state.isLoading = true;
        expect(reducer(undefined, { type: {{pascalCase storeName}}ActionTypes.{{upperCase (snakeCase storeName)}}_REQUEST })).toEqual(state);
    });

    it('should invalidate the data in the store', () => {
        state.didInvalidate = true;
        expect(reducer(undefined, { type: {{pascalCase storeName}}ActionTypes.{{upperCase (snakeCase storeName)}}_INVALIDATE })).toEqual(state);
    });
});
